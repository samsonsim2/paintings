/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF, useTexture } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
 
export function Model4(props) {
  const brushBubblesMap = useTexture("/Textures/Brush_Bubbles.png");
  const brushCometMap = useTexture("/Textures/Brush_Comet.png");
  const brushDiamondHullMap = useTexture("/Textures/Brush_DiamondHull.png");
  const brushDotsMap = useTexture("/Textures/Brush_Dots.png");
  const brushDuctTapeMap = useTexture("/Textures/Brush_DuctTape.png");
  const brushEmbersMap = useTexture("/Textures/Brush_Embers.png");
  const brushHyperColorMap = useTexture("/Textures/Brush_Hypercolor.png");
  const brushHyperGridMap = useTexture("/Textures/Brush_HyperGrid.png");
  const brushInkMap = useTexture("/Textures/Brush_Ink.png");
  const brushSmokeMap = useTexture("/Textures/Brush_Smoke.png");
  const brushSoftHiglighterMap = useTexture(
    "/Textures/Brush_SoftHighlighter.png"
  );
  const brushStreamersMap = useTexture("/Textures/Brush_Streamers.png");
  const brushThickPaintMap = useTexture("/Textures/Brush_ThickPaint.png");
  const brushWigglyGraphiteMap = useTexture("/Textures/Brush_WigglyGraphite.png");
  const { nodes, materials } = useGLTF("/Model4.glb");
  const myMesh = React.useRef()
  useFrame(({ clock }) => {
    myMesh.current.rotation.y = clock.getElapsedTime()/5
  })
 
  return (
    <group ref={myMesh} {...props} dispose={null} scale={2} position={[0,1,0]}>
      {/* <mesh
        castShadow
        receiveShadow
        geometry={nodes.brush_Streamers_g0_b0.geometry}
        material={materials.brush_Streamers}
       ><meshPhongMaterial map={brushStreamersMap}  emissive={"#C000FF"}  emissiveIntensity={1} color={"#C000FF"}  transparent={true} opacity={0.7}/></mesh> */}
      {/* <mesh
        castShadow
        receiveShadow
        geometry={nodes.brush_SoftHighlighter_g0_b0.geometry}
        material={materials.brush_SoftHighlighter}
       ><meshPhongMaterial map={brushStreamersMap}  emissive={"#C000FF"}  emissiveIntensity={1} color={"#C000FF"}  transparent={true} opacity={0.7}/></mesh> */}
      {/* <mesh
        castShadow
        receiveShadow
        geometry={nodes.brush_Petal_g0_b0.geometry}
        material={materials.brush_Petal}
        ><meshPhongMaterial map={brushStreamersMap}  emissive={"#C000FF"}  emissiveIntensity={1} color={"#C000FF"}  transparent={true} opacity={0.7}/></mesh> */}
      {/* <mesh
        castShadow
        receiveShadow
        geometry={nodes.brush_ThickPaint_g0_b0.geometry}
        material={materials.brush_ThickPaint}
        ><meshPhongMaterial map={brushStreamersMap}  emissive={"#C000FF"}  emissiveIntensity={1} color={"#C000FF"}  transparent={true} opacity={0.7}/></mesh> */}
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.brush_Ink_g0_b0.geometry}
        material={materials.brush_Ink}
      ><meshBasicMaterial map={brushInkMap}   color={"#022B66"}   /></mesh>  
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.brush_DiamondHull_g0_b0.geometry}
        material={materials.brush_DiamondHull}
      ><meshBasicMaterial map={brushDiamondHullMap}  color={"#C5FFFD"}  transparent={true} opacity={0.5}/></mesh>  
       {/*Body*/}
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.brush_DiamondHull_g0_b1.geometry}
        material={materials.brush_DiamondHull}
        ><meshBasicMaterial map={brushDiamondHullMap}  color={"#94BED3"}  transparent={true} opacity={0.7}/></mesh>  
      {/*Head*/}
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.brush_DiamondHull_g0_b2.geometry}
        material={materials.brush_DiamondHull}
        ><meshBasicMaterial map={brushDiamondHullMap}  color={"#518EA8"}  transparent={true} opacity={0.7}/></mesh>  
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.brush_Disco_g0_b0.geometry}
        material={materials.brush_Disco}
       ><meshBasicMaterial    color={"#6F6B91"}  transparent={true} opacity={0.7}/></mesh>  
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.brush_Disco_g0_b1.geometry}
        material={materials.brush_Disco}
        ><meshBasicMaterial   map={brushStreamersMap} color={"#6F6B91"}   /></mesh>  
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.brush_Disco_g0_b2.geometry}
        material={materials.brush_Disco}
        ><meshBasicMaterial   map={brushStreamersMap} color={"#6F6B91"}  transparent={true} opacity={0.7}/></mesh>  
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.brush_Disco_g0_b3.geometry}
        material={materials.brush_Disco}
        ><meshBasicMaterial    map={brushSmokeMap} color={"#3A0A44"}  transparent={true} opacity={0.7}/></mesh>  
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.brush_WigglyGraphite_g0_b0.geometry}
        material={materials.brush_WigglyGraphite}
       ><meshBasicMaterial map={brushWigglyGraphiteMap}  color={"#red"}  transparent={true} opacity={0.7}/></mesh>  
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.brush_DuctTape_g0_b0.geometry}
        material={materials.brush_DuctTape}
       ><meshBasicMaterial map={brushDiamondHullMap}  color={"#ADD8E6"}  transparent={true} opacity={0.7}/></mesh>  
    </group>
  );
}

useGLTF.preload("/Model4.glb");
